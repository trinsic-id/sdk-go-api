/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the TrinsicTestDatabaseLookupInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrinsicTestDatabaseLookupInput{}

// TrinsicTestDatabaseLookupInput struct for TrinsicTestDatabaseLookupInput
type TrinsicTestDatabaseLookupInput struct {
	// The given name to use for the output of the test Session.              This is required; if not provided, Trinsic's Fallback UI will be invoked to collect it from the user.              Can be any non-empty value.
	GivenName NullableString `json:"givenName,omitempty"`
	// The family name to use for the output of the test Session.              This is required; if not provided, Trinsic's Fallback UI will be invoked to collect it from the user.              Can be any non-empty value.
	FamilyName NullableString `json:"familyName,omitempty"`
	// A 6-digit code; must be \"123456\" for the Session to succeed.              This is required; if not provided, Trinsic's Fallback UI will be invoked to collect it from the user.              Any other value will cause the Session to fail.
	IdentityCode NullableString `json:"identityCode,omitempty"`
	// An optional selfie image, base64-encoded.              Will replace the existing test selfie attachment output if provided.
	SelfieBase64 NullableString `json:"selfieBase64,omitempty"`
}

// NewTrinsicTestDatabaseLookupInput instantiates a new TrinsicTestDatabaseLookupInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrinsicTestDatabaseLookupInput() *TrinsicTestDatabaseLookupInput {
	this := TrinsicTestDatabaseLookupInput{}
	return &this
}

// NewTrinsicTestDatabaseLookupInputWithDefaults instantiates a new TrinsicTestDatabaseLookupInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrinsicTestDatabaseLookupInputWithDefaults() *TrinsicTestDatabaseLookupInput {
	this := TrinsicTestDatabaseLookupInput{}
	return &this
}

// GetGivenName returns the GivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrinsicTestDatabaseLookupInput) GetGivenName() string {
	if o == nil || IsNil(o.GivenName.Get()) {
		var ret string
		return ret
	}
	return *o.GivenName.Get()
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrinsicTestDatabaseLookupInput) GetGivenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GivenName.Get(), o.GivenName.IsSet()
}

// HasGivenName returns a boolean if a field has been set.
func (o *TrinsicTestDatabaseLookupInput) HasGivenName() bool {
	if o != nil && o.GivenName.IsSet() {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given NullableString and assigns it to the GivenName field.
func (o *TrinsicTestDatabaseLookupInput) SetGivenName(v string) {
	o.GivenName.Set(&v)
}
// SetGivenNameNil sets the value for GivenName to be an explicit nil
func (o *TrinsicTestDatabaseLookupInput) SetGivenNameNil() {
	o.GivenName.Set(nil)
}

// UnsetGivenName ensures that no value is present for GivenName, not even an explicit nil
func (o *TrinsicTestDatabaseLookupInput) UnsetGivenName() {
	o.GivenName.Unset()
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrinsicTestDatabaseLookupInput) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName.Get()) {
		var ret string
		return ret
	}
	return *o.FamilyName.Get()
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrinsicTestDatabaseLookupInput) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FamilyName.Get(), o.FamilyName.IsSet()
}

// HasFamilyName returns a boolean if a field has been set.
func (o *TrinsicTestDatabaseLookupInput) HasFamilyName() bool {
	if o != nil && o.FamilyName.IsSet() {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given NullableString and assigns it to the FamilyName field.
func (o *TrinsicTestDatabaseLookupInput) SetFamilyName(v string) {
	o.FamilyName.Set(&v)
}
// SetFamilyNameNil sets the value for FamilyName to be an explicit nil
func (o *TrinsicTestDatabaseLookupInput) SetFamilyNameNil() {
	o.FamilyName.Set(nil)
}

// UnsetFamilyName ensures that no value is present for FamilyName, not even an explicit nil
func (o *TrinsicTestDatabaseLookupInput) UnsetFamilyName() {
	o.FamilyName.Unset()
}

// GetIdentityCode returns the IdentityCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrinsicTestDatabaseLookupInput) GetIdentityCode() string {
	if o == nil || IsNil(o.IdentityCode.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityCode.Get()
}

// GetIdentityCodeOk returns a tuple with the IdentityCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrinsicTestDatabaseLookupInput) GetIdentityCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityCode.Get(), o.IdentityCode.IsSet()
}

// HasIdentityCode returns a boolean if a field has been set.
func (o *TrinsicTestDatabaseLookupInput) HasIdentityCode() bool {
	if o != nil && o.IdentityCode.IsSet() {
		return true
	}

	return false
}

// SetIdentityCode gets a reference to the given NullableString and assigns it to the IdentityCode field.
func (o *TrinsicTestDatabaseLookupInput) SetIdentityCode(v string) {
	o.IdentityCode.Set(&v)
}
// SetIdentityCodeNil sets the value for IdentityCode to be an explicit nil
func (o *TrinsicTestDatabaseLookupInput) SetIdentityCodeNil() {
	o.IdentityCode.Set(nil)
}

// UnsetIdentityCode ensures that no value is present for IdentityCode, not even an explicit nil
func (o *TrinsicTestDatabaseLookupInput) UnsetIdentityCode() {
	o.IdentityCode.Unset()
}

// GetSelfieBase64 returns the SelfieBase64 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrinsicTestDatabaseLookupInput) GetSelfieBase64() string {
	if o == nil || IsNil(o.SelfieBase64.Get()) {
		var ret string
		return ret
	}
	return *o.SelfieBase64.Get()
}

// GetSelfieBase64Ok returns a tuple with the SelfieBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrinsicTestDatabaseLookupInput) GetSelfieBase64Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelfieBase64.Get(), o.SelfieBase64.IsSet()
}

// HasSelfieBase64 returns a boolean if a field has been set.
func (o *TrinsicTestDatabaseLookupInput) HasSelfieBase64() bool {
	if o != nil && o.SelfieBase64.IsSet() {
		return true
	}

	return false
}

// SetSelfieBase64 gets a reference to the given NullableString and assigns it to the SelfieBase64 field.
func (o *TrinsicTestDatabaseLookupInput) SetSelfieBase64(v string) {
	o.SelfieBase64.Set(&v)
}
// SetSelfieBase64Nil sets the value for SelfieBase64 to be an explicit nil
func (o *TrinsicTestDatabaseLookupInput) SetSelfieBase64Nil() {
	o.SelfieBase64.Set(nil)
}

// UnsetSelfieBase64 ensures that no value is present for SelfieBase64, not even an explicit nil
func (o *TrinsicTestDatabaseLookupInput) UnsetSelfieBase64() {
	o.SelfieBase64.Unset()
}

func (o TrinsicTestDatabaseLookupInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrinsicTestDatabaseLookupInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GivenName.IsSet() {
		toSerialize["givenName"] = o.GivenName.Get()
	}
	if o.FamilyName.IsSet() {
		toSerialize["familyName"] = o.FamilyName.Get()
	}
	if o.IdentityCode.IsSet() {
		toSerialize["identityCode"] = o.IdentityCode.Get()
	}
	if o.SelfieBase64.IsSet() {
		toSerialize["selfieBase64"] = o.SelfieBase64.Get()
	}
	return toSerialize, nil
}

type NullableTrinsicTestDatabaseLookupInput struct {
	value *TrinsicTestDatabaseLookupInput
	isSet bool
}

func (v NullableTrinsicTestDatabaseLookupInput) Get() *TrinsicTestDatabaseLookupInput {
	return v.value
}

func (v *NullableTrinsicTestDatabaseLookupInput) Set(val *TrinsicTestDatabaseLookupInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTrinsicTestDatabaseLookupInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTrinsicTestDatabaseLookupInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrinsicTestDatabaseLookupInput(val *TrinsicTestDatabaseLookupInput) *NullableTrinsicTestDatabaseLookupInput {
	return &NullableTrinsicTestDatabaseLookupInput{value: val, isSet: true}
}

func (v NullableTrinsicTestDatabaseLookupInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrinsicTestDatabaseLookupInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


