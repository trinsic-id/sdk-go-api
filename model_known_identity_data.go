/*
Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the KnownIdentityData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KnownIdentityData{}

// KnownIdentityData Known identity data of an individual being verified.                Provide this to Trinsic during Session creation to enable improved identity provider selection recommendations.
type KnownIdentityData struct {
	// Known identity data specific to the person being verified
	Person *KnownPersonData `json:"person,omitempty"`
}

// NewKnownIdentityData instantiates a new KnownIdentityData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKnownIdentityData() *KnownIdentityData {
	this := KnownIdentityData{}
	return &this
}

// NewKnownIdentityDataWithDefaults instantiates a new KnownIdentityData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKnownIdentityDataWithDefaults() *KnownIdentityData {
	this := KnownIdentityData{}
	return &this
}

// GetPerson returns the Person field value if set, zero value otherwise.
func (o *KnownIdentityData) GetPerson() KnownPersonData {
	if o == nil || IsNil(o.Person) {
		var ret KnownPersonData
		return ret
	}
	return *o.Person
}

// GetPersonOk returns a tuple with the Person field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KnownIdentityData) GetPersonOk() (*KnownPersonData, bool) {
	if o == nil || IsNil(o.Person) {
		return nil, false
	}
	return o.Person, true
}

// HasPerson returns a boolean if a field has been set.
func (o *KnownIdentityData) HasPerson() bool {
	if o != nil && !IsNil(o.Person) {
		return true
	}

	return false
}

// SetPerson gets a reference to the given KnownPersonData and assigns it to the Person field.
func (o *KnownIdentityData) SetPerson(v KnownPersonData) {
	o.Person = &v
}

func (o KnownIdentityData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KnownIdentityData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Person) {
		toSerialize["person"] = o.Person
	}
	return toSerialize, nil
}

type NullableKnownIdentityData struct {
	value *KnownIdentityData
	isSet bool
}

func (v NullableKnownIdentityData) Get() *KnownIdentityData {
	return v.value
}

func (v *NullableKnownIdentityData) Set(val *KnownIdentityData) {
	v.value = val
	v.isSet = true
}

func (v NullableKnownIdentityData) IsSet() bool {
	return v.isSet
}

func (v *NullableKnownIdentityData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKnownIdentityData(val *KnownIdentityData) *NullableKnownIdentityData {
	return &NullableKnownIdentityData{value: val, isSet: true}
}

func (v NullableKnownIdentityData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKnownIdentityData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


