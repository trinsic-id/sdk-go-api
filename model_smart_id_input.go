/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the SmartIdInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmartIdInput{}

// SmartIdInput struct for SmartIdInput
type SmartIdInput struct {
	// The user's Smart ID Document Number
	// Deprecated
	SmartIdDocumentNumber NullableString `json:"smartIdDocumentNumber,omitempty"`
	// The user's Smart ID ETSI number or document number.
	SmartIdNumber NullableString `json:"smartIdNumber,omitempty"`
}

// NewSmartIdInput instantiates a new SmartIdInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmartIdInput() *SmartIdInput {
	this := SmartIdInput{}
	return &this
}

// NewSmartIdInputWithDefaults instantiates a new SmartIdInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmartIdInputWithDefaults() *SmartIdInput {
	this := SmartIdInput{}
	return &this
}

// GetSmartIdDocumentNumber returns the SmartIdDocumentNumber field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SmartIdInput) GetSmartIdDocumentNumber() string {
	if o == nil || IsNil(o.SmartIdDocumentNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SmartIdDocumentNumber.Get()
}

// GetSmartIdDocumentNumberOk returns a tuple with the SmartIdDocumentNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SmartIdInput) GetSmartIdDocumentNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmartIdDocumentNumber.Get(), o.SmartIdDocumentNumber.IsSet()
}

// HasSmartIdDocumentNumber returns a boolean if a field has been set.
func (o *SmartIdInput) HasSmartIdDocumentNumber() bool {
	if o != nil && o.SmartIdDocumentNumber.IsSet() {
		return true
	}

	return false
}

// SetSmartIdDocumentNumber gets a reference to the given NullableString and assigns it to the SmartIdDocumentNumber field.
// Deprecated
func (o *SmartIdInput) SetSmartIdDocumentNumber(v string) {
	o.SmartIdDocumentNumber.Set(&v)
}
// SetSmartIdDocumentNumberNil sets the value for SmartIdDocumentNumber to be an explicit nil
func (o *SmartIdInput) SetSmartIdDocumentNumberNil() {
	o.SmartIdDocumentNumber.Set(nil)
}

// UnsetSmartIdDocumentNumber ensures that no value is present for SmartIdDocumentNumber, not even an explicit nil
func (o *SmartIdInput) UnsetSmartIdDocumentNumber() {
	o.SmartIdDocumentNumber.Unset()
}

// GetSmartIdNumber returns the SmartIdNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SmartIdInput) GetSmartIdNumber() string {
	if o == nil || IsNil(o.SmartIdNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SmartIdNumber.Get()
}

// GetSmartIdNumberOk returns a tuple with the SmartIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SmartIdInput) GetSmartIdNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SmartIdNumber.Get(), o.SmartIdNumber.IsSet()
}

// HasSmartIdNumber returns a boolean if a field has been set.
func (o *SmartIdInput) HasSmartIdNumber() bool {
	if o != nil && o.SmartIdNumber.IsSet() {
		return true
	}

	return false
}

// SetSmartIdNumber gets a reference to the given NullableString and assigns it to the SmartIdNumber field.
func (o *SmartIdInput) SetSmartIdNumber(v string) {
	o.SmartIdNumber.Set(&v)
}
// SetSmartIdNumberNil sets the value for SmartIdNumber to be an explicit nil
func (o *SmartIdInput) SetSmartIdNumberNil() {
	o.SmartIdNumber.Set(nil)
}

// UnsetSmartIdNumber ensures that no value is present for SmartIdNumber, not even an explicit nil
func (o *SmartIdInput) UnsetSmartIdNumber() {
	o.SmartIdNumber.Unset()
}

func (o SmartIdInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmartIdInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SmartIdDocumentNumber.IsSet() {
		toSerialize["smartIdDocumentNumber"] = o.SmartIdDocumentNumber.Get()
	}
	if o.SmartIdNumber.IsSet() {
		toSerialize["smartIdNumber"] = o.SmartIdNumber.Get()
	}
	return toSerialize, nil
}

type NullableSmartIdInput struct {
	value *SmartIdInput
	isSet bool
}

func (v NullableSmartIdInput) Get() *SmartIdInput {
	return v.value
}

func (v *NullableSmartIdInput) Set(val *SmartIdInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSmartIdInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSmartIdInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmartIdInput(val *SmartIdInput) *NullableSmartIdInput {
	return &NullableSmartIdInput{value: val, isSet: true}
}

func (v NullableSmartIdInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmartIdInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


