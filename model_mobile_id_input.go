/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the MobileIdInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MobileIdInput{}

// MobileIdInput struct for MobileIdInput
type MobileIdInput struct {
	// The user's phone number in E.164 format
	MobileIdPhoneNumber NullableString `json:"mobileIdPhoneNumber,omitempty"`
	// The user's National ID number
	MobileIdNationalIdentityNumber NullableString `json:"mobileIdNationalIdentityNumber,omitempty"`
	// The user's language -- LIT, EST, ENG, or RUS
	MobileIdLanguage NullableLanguage `json:"mobileIdLanguage,omitempty"`
}

// NewMobileIdInput instantiates a new MobileIdInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMobileIdInput() *MobileIdInput {
	this := MobileIdInput{}
	return &this
}

// NewMobileIdInputWithDefaults instantiates a new MobileIdInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMobileIdInputWithDefaults() *MobileIdInput {
	this := MobileIdInput{}
	return &this
}

// GetMobileIdPhoneNumber returns the MobileIdPhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileIdInput) GetMobileIdPhoneNumber() string {
	if o == nil || IsNil(o.MobileIdPhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.MobileIdPhoneNumber.Get()
}

// GetMobileIdPhoneNumberOk returns a tuple with the MobileIdPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileIdInput) GetMobileIdPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileIdPhoneNumber.Get(), o.MobileIdPhoneNumber.IsSet()
}

// HasMobileIdPhoneNumber returns a boolean if a field has been set.
func (o *MobileIdInput) HasMobileIdPhoneNumber() bool {
	if o != nil && o.MobileIdPhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetMobileIdPhoneNumber gets a reference to the given NullableString and assigns it to the MobileIdPhoneNumber field.
func (o *MobileIdInput) SetMobileIdPhoneNumber(v string) {
	o.MobileIdPhoneNumber.Set(&v)
}
// SetMobileIdPhoneNumberNil sets the value for MobileIdPhoneNumber to be an explicit nil
func (o *MobileIdInput) SetMobileIdPhoneNumberNil() {
	o.MobileIdPhoneNumber.Set(nil)
}

// UnsetMobileIdPhoneNumber ensures that no value is present for MobileIdPhoneNumber, not even an explicit nil
func (o *MobileIdInput) UnsetMobileIdPhoneNumber() {
	o.MobileIdPhoneNumber.Unset()
}

// GetMobileIdNationalIdentityNumber returns the MobileIdNationalIdentityNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileIdInput) GetMobileIdNationalIdentityNumber() string {
	if o == nil || IsNil(o.MobileIdNationalIdentityNumber.Get()) {
		var ret string
		return ret
	}
	return *o.MobileIdNationalIdentityNumber.Get()
}

// GetMobileIdNationalIdentityNumberOk returns a tuple with the MobileIdNationalIdentityNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileIdInput) GetMobileIdNationalIdentityNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileIdNationalIdentityNumber.Get(), o.MobileIdNationalIdentityNumber.IsSet()
}

// HasMobileIdNationalIdentityNumber returns a boolean if a field has been set.
func (o *MobileIdInput) HasMobileIdNationalIdentityNumber() bool {
	if o != nil && o.MobileIdNationalIdentityNumber.IsSet() {
		return true
	}

	return false
}

// SetMobileIdNationalIdentityNumber gets a reference to the given NullableString and assigns it to the MobileIdNationalIdentityNumber field.
func (o *MobileIdInput) SetMobileIdNationalIdentityNumber(v string) {
	o.MobileIdNationalIdentityNumber.Set(&v)
}
// SetMobileIdNationalIdentityNumberNil sets the value for MobileIdNationalIdentityNumber to be an explicit nil
func (o *MobileIdInput) SetMobileIdNationalIdentityNumberNil() {
	o.MobileIdNationalIdentityNumber.Set(nil)
}

// UnsetMobileIdNationalIdentityNumber ensures that no value is present for MobileIdNationalIdentityNumber, not even an explicit nil
func (o *MobileIdInput) UnsetMobileIdNationalIdentityNumber() {
	o.MobileIdNationalIdentityNumber.Unset()
}

// GetMobileIdLanguage returns the MobileIdLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MobileIdInput) GetMobileIdLanguage() Language {
	if o == nil || IsNil(o.MobileIdLanguage.Get()) {
		var ret Language
		return ret
	}
	return *o.MobileIdLanguage.Get()
}

// GetMobileIdLanguageOk returns a tuple with the MobileIdLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MobileIdInput) GetMobileIdLanguageOk() (*Language, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileIdLanguage.Get(), o.MobileIdLanguage.IsSet()
}

// HasMobileIdLanguage returns a boolean if a field has been set.
func (o *MobileIdInput) HasMobileIdLanguage() bool {
	if o != nil && o.MobileIdLanguage.IsSet() {
		return true
	}

	return false
}

// SetMobileIdLanguage gets a reference to the given NullableLanguage and assigns it to the MobileIdLanguage field.
func (o *MobileIdInput) SetMobileIdLanguage(v Language) {
	o.MobileIdLanguage.Set(&v)
}
// SetMobileIdLanguageNil sets the value for MobileIdLanguage to be an explicit nil
func (o *MobileIdInput) SetMobileIdLanguageNil() {
	o.MobileIdLanguage.Set(nil)
}

// UnsetMobileIdLanguage ensures that no value is present for MobileIdLanguage, not even an explicit nil
func (o *MobileIdInput) UnsetMobileIdLanguage() {
	o.MobileIdLanguage.Unset()
}

func (o MobileIdInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MobileIdInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MobileIdPhoneNumber.IsSet() {
		toSerialize["mobileIdPhoneNumber"] = o.MobileIdPhoneNumber.Get()
	}
	if o.MobileIdNationalIdentityNumber.IsSet() {
		toSerialize["mobileIdNationalIdentityNumber"] = o.MobileIdNationalIdentityNumber.Get()
	}
	if o.MobileIdLanguage.IsSet() {
		toSerialize["mobileIdLanguage"] = o.MobileIdLanguage.Get()
	}
	return toSerialize, nil
}

type NullableMobileIdInput struct {
	value *MobileIdInput
	isSet bool
}

func (v NullableMobileIdInput) Get() *MobileIdInput {
	return v.value
}

func (v *NullableMobileIdInput) Set(val *MobileIdInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMobileIdInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMobileIdInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMobileIdInput(val *MobileIdInput) *NullableMobileIdInput {
	return &NullableMobileIdInput{value: val, isSet: true}
}

func (v NullableMobileIdInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMobileIdInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


