/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateHostedProviderSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateHostedProviderSessionRequest{}

// CreateHostedProviderSessionRequest struct for CreateHostedProviderSessionRequest
type CreateHostedProviderSessionRequest struct {
	// The ID of the provider to launch
	Provider string `json:"provider"`
	// The Redirect URL to which the user should be sent after the session is complete.
	RedirectUrl string `json:"redirectUrl"`
	// Provider-specific input for those providers which require it.
	ProviderInput NullableProviderInput `json:"providerInput,omitempty"`
}

type _CreateHostedProviderSessionRequest CreateHostedProviderSessionRequest

// NewCreateHostedProviderSessionRequest instantiates a new CreateHostedProviderSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateHostedProviderSessionRequest(provider string, redirectUrl string) *CreateHostedProviderSessionRequest {
	this := CreateHostedProviderSessionRequest{}
	this.Provider = provider
	this.RedirectUrl = redirectUrl
	return &this
}

// NewCreateHostedProviderSessionRequestWithDefaults instantiates a new CreateHostedProviderSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateHostedProviderSessionRequestWithDefaults() *CreateHostedProviderSessionRequest {
	this := CreateHostedProviderSessionRequest{}
	return &this
}

// GetProvider returns the Provider field value
func (o *CreateHostedProviderSessionRequest) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *CreateHostedProviderSessionRequest) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *CreateHostedProviderSessionRequest) SetProvider(v string) {
	o.Provider = v
}

// GetRedirectUrl returns the RedirectUrl field value
func (o *CreateHostedProviderSessionRequest) GetRedirectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value
// and a boolean to check if the value has been set.
func (o *CreateHostedProviderSessionRequest) GetRedirectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUrl, true
}

// SetRedirectUrl sets field value
func (o *CreateHostedProviderSessionRequest) SetRedirectUrl(v string) {
	o.RedirectUrl = v
}

// GetProviderInput returns the ProviderInput field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHostedProviderSessionRequest) GetProviderInput() ProviderInput {
	if o == nil || IsNil(o.ProviderInput.Get()) {
		var ret ProviderInput
		return ret
	}
	return *o.ProviderInput.Get()
}

// GetProviderInputOk returns a tuple with the ProviderInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHostedProviderSessionRequest) GetProviderInputOk() (*ProviderInput, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderInput.Get(), o.ProviderInput.IsSet()
}

// HasProviderInput returns a boolean if a field has been set.
func (o *CreateHostedProviderSessionRequest) HasProviderInput() bool {
	if o != nil && o.ProviderInput.IsSet() {
		return true
	}

	return false
}

// SetProviderInput gets a reference to the given NullableProviderInput and assigns it to the ProviderInput field.
func (o *CreateHostedProviderSessionRequest) SetProviderInput(v ProviderInput) {
	o.ProviderInput.Set(&v)
}
// SetProviderInputNil sets the value for ProviderInput to be an explicit nil
func (o *CreateHostedProviderSessionRequest) SetProviderInputNil() {
	o.ProviderInput.Set(nil)
}

// UnsetProviderInput ensures that no value is present for ProviderInput, not even an explicit nil
func (o *CreateHostedProviderSessionRequest) UnsetProviderInput() {
	o.ProviderInput.Unset()
}

func (o CreateHostedProviderSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateHostedProviderSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provider"] = o.Provider
	toSerialize["redirectUrl"] = o.RedirectUrl
	if o.ProviderInput.IsSet() {
		toSerialize["providerInput"] = o.ProviderInput.Get()
	}
	return toSerialize, nil
}

func (o *CreateHostedProviderSessionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"provider",
		"redirectUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateHostedProviderSessionRequest := _CreateHostedProviderSessionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateHostedProviderSessionRequest)

	if err != nil {
		return err
	}

	*o = CreateHostedProviderSessionRequest(varCreateHostedProviderSessionRequest)

	return err
}

type NullableCreateHostedProviderSessionRequest struct {
	value *CreateHostedProviderSessionRequest
	isSet bool
}

func (v NullableCreateHostedProviderSessionRequest) Get() *CreateHostedProviderSessionRequest {
	return v.value
}

func (v *NullableCreateHostedProviderSessionRequest) Set(val *CreateHostedProviderSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateHostedProviderSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateHostedProviderSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateHostedProviderSessionRequest(val *CreateHostedProviderSessionRequest) *NullableCreateHostedProviderSessionRequest {
	return &NullableCreateHostedProviderSessionRequest{value: val, isSet: true}
}

func (v NullableCreateHostedProviderSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateHostedProviderSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


