/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MexicoCurpInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MexicoCurpInput{}

// MexicoCurpInput struct for MexicoCurpInput
type MexicoCurpInput struct {
	// The user's CURP number
	Curp string `json:"curp"`
}

type _MexicoCurpInput MexicoCurpInput

// NewMexicoCurpInput instantiates a new MexicoCurpInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMexicoCurpInput(curp string) *MexicoCurpInput {
	this := MexicoCurpInput{}
	this.Curp = curp
	return &this
}

// NewMexicoCurpInputWithDefaults instantiates a new MexicoCurpInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMexicoCurpInputWithDefaults() *MexicoCurpInput {
	this := MexicoCurpInput{}
	return &this
}

// GetCurp returns the Curp field value
func (o *MexicoCurpInput) GetCurp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Curp
}

// GetCurpOk returns a tuple with the Curp field value
// and a boolean to check if the value has been set.
func (o *MexicoCurpInput) GetCurpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Curp, true
}

// SetCurp sets field value
func (o *MexicoCurpInput) SetCurp(v string) {
	o.Curp = v
}

func (o MexicoCurpInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MexicoCurpInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["curp"] = o.Curp
	return toSerialize, nil
}

func (o *MexicoCurpInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"curp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMexicoCurpInput := _MexicoCurpInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMexicoCurpInput)

	if err != nil {
		return err
	}

	*o = MexicoCurpInput(varMexicoCurpInput)

	return err
}

type NullableMexicoCurpInput struct {
	value *MexicoCurpInput
	isSet bool
}

func (v NullableMexicoCurpInput) Get() *MexicoCurpInput {
	return v.value
}

func (v *NullableMexicoCurpInput) Set(val *MexicoCurpInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMexicoCurpInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMexicoCurpInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMexicoCurpInput(val *MexicoCurpInput) *NullableMexicoCurpInput {
	return &NullableMexicoCurpInput{value: val, isSet: true}
}

func (v NullableMexicoCurpInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMexicoCurpInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


