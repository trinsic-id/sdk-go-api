/*
Connect API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RecommendResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RecommendResponse{}

// RecommendResponse struct for RecommendResponse
type RecommendResponse struct {
	// The list of providers that were recognized in Trinsic's network. These are providers that already verified this user
	Recognized []ProviderInformation `json:"recognized"`
	// The list of providers that although not recognized, are relevant to the user's identity. The user may have been verified by these providers
	Relevant []ProviderInformation `json:"relevant"`
	// The list of providers that are not recognized and are not relevant to the user's identity
	Remainder []ProviderInformation `json:"remainder"`
}

type _RecommendResponse RecommendResponse

// NewRecommendResponse instantiates a new RecommendResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecommendResponse(recognized []ProviderInformation, relevant []ProviderInformation, remainder []ProviderInformation) *RecommendResponse {
	this := RecommendResponse{}
	this.Recognized = recognized
	this.Relevant = relevant
	this.Remainder = remainder
	return &this
}

// NewRecommendResponseWithDefaults instantiates a new RecommendResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecommendResponseWithDefaults() *RecommendResponse {
	this := RecommendResponse{}
	return &this
}

// GetRecognized returns the Recognized field value
func (o *RecommendResponse) GetRecognized() []ProviderInformation {
	if o == nil {
		var ret []ProviderInformation
		return ret
	}

	return o.Recognized
}

// GetRecognizedOk returns a tuple with the Recognized field value
// and a boolean to check if the value has been set.
func (o *RecommendResponse) GetRecognizedOk() ([]ProviderInformation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recognized, true
}

// SetRecognized sets field value
func (o *RecommendResponse) SetRecognized(v []ProviderInformation) {
	o.Recognized = v
}

// GetRelevant returns the Relevant field value
func (o *RecommendResponse) GetRelevant() []ProviderInformation {
	if o == nil {
		var ret []ProviderInformation
		return ret
	}

	return o.Relevant
}

// GetRelevantOk returns a tuple with the Relevant field value
// and a boolean to check if the value has been set.
func (o *RecommendResponse) GetRelevantOk() ([]ProviderInformation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Relevant, true
}

// SetRelevant sets field value
func (o *RecommendResponse) SetRelevant(v []ProviderInformation) {
	o.Relevant = v
}

// GetRemainder returns the Remainder field value
func (o *RecommendResponse) GetRemainder() []ProviderInformation {
	if o == nil {
		var ret []ProviderInformation
		return ret
	}

	return o.Remainder
}

// GetRemainderOk returns a tuple with the Remainder field value
// and a boolean to check if the value has been set.
func (o *RecommendResponse) GetRemainderOk() ([]ProviderInformation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Remainder, true
}

// SetRemainder sets field value
func (o *RecommendResponse) SetRemainder(v []ProviderInformation) {
	o.Remainder = v
}

func (o RecommendResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RecommendResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recognized"] = o.Recognized
	toSerialize["relevant"] = o.Relevant
	toSerialize["remainder"] = o.Remainder
	return toSerialize, nil
}

func (o *RecommendResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recognized",
		"relevant",
		"remainder",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRecommendResponse := _RecommendResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRecommendResponse)

	if err != nil {
		return err
	}

	*o = RecommendResponse(varRecommendResponse)

	return err
}

type NullableRecommendResponse struct {
	value *RecommendResponse
	isSet bool
}

func (v NullableRecommendResponse) Get() *RecommendResponse {
	return v.value
}

func (v *NullableRecommendResponse) Set(val *RecommendResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendResponse(val *RecommendResponse) *NullableRecommendResponse {
	return &NullableRecommendResponse{value: val, isSet: true}
}

func (v NullableRecommendResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


