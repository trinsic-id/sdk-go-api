/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateHostedProviderSessionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateHostedProviderSessionResponse{}

// CreateHostedProviderSessionResponse struct for CreateHostedProviderSessionResponse
type CreateHostedProviderSessionResponse struct {
	// The ID of the newly-created Acceptance Session
	SessionId string `json:"sessionId"`
	// The URL that should be used to launch the Hosted Provider Session on your user's device.                There are two recommended ways to do so:  - Redirect their browser to the `LaunchUrl` as a top-level navigation  - Open a popup window and navigate it to the `LaunchUrl`                This URL is sensitive and as such can only be obtained once. If you need to obtain it again, you will need to create a new Acceptance Session.
	LaunchUrl NullableString `json:"launchUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateHostedProviderSessionResponse CreateHostedProviderSessionResponse

// NewCreateHostedProviderSessionResponse instantiates a new CreateHostedProviderSessionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateHostedProviderSessionResponse(sessionId string) *CreateHostedProviderSessionResponse {
	this := CreateHostedProviderSessionResponse{}
	this.SessionId = sessionId
	return &this
}

// NewCreateHostedProviderSessionResponseWithDefaults instantiates a new CreateHostedProviderSessionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateHostedProviderSessionResponseWithDefaults() *CreateHostedProviderSessionResponse {
	this := CreateHostedProviderSessionResponse{}
	return &this
}

// GetSessionId returns the SessionId field value
func (o *CreateHostedProviderSessionResponse) GetSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value
// and a boolean to check if the value has been set.
func (o *CreateHostedProviderSessionResponse) GetSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionId, true
}

// SetSessionId sets field value
func (o *CreateHostedProviderSessionResponse) SetSessionId(v string) {
	o.SessionId = v
}

// GetLaunchUrl returns the LaunchUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateHostedProviderSessionResponse) GetLaunchUrl() string {
	if o == nil || IsNil(o.LaunchUrl.Get()) {
		var ret string
		return ret
	}
	return *o.LaunchUrl.Get()
}

// GetLaunchUrlOk returns a tuple with the LaunchUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateHostedProviderSessionResponse) GetLaunchUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LaunchUrl.Get(), o.LaunchUrl.IsSet()
}

// HasLaunchUrl returns a boolean if a field has been set.
func (o *CreateHostedProviderSessionResponse) HasLaunchUrl() bool {
	if o != nil && o.LaunchUrl.IsSet() {
		return true
	}

	return false
}

// SetLaunchUrl gets a reference to the given NullableString and assigns it to the LaunchUrl field.
func (o *CreateHostedProviderSessionResponse) SetLaunchUrl(v string) {
	o.LaunchUrl.Set(&v)
}
// SetLaunchUrlNil sets the value for LaunchUrl to be an explicit nil
func (o *CreateHostedProviderSessionResponse) SetLaunchUrlNil() {
	o.LaunchUrl.Set(nil)
}

// UnsetLaunchUrl ensures that no value is present for LaunchUrl, not even an explicit nil
func (o *CreateHostedProviderSessionResponse) UnsetLaunchUrl() {
	o.LaunchUrl.Unset()
}

func (o CreateHostedProviderSessionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateHostedProviderSessionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessionId"] = o.SessionId
	if o.LaunchUrl.IsSet() {
		toSerialize["launchUrl"] = o.LaunchUrl.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateHostedProviderSessionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sessionId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateHostedProviderSessionResponse := _CreateHostedProviderSessionResponse{}

	err = json.Unmarshal(data, &varCreateHostedProviderSessionResponse)

	if err != nil {
		return err
	}

	*o = CreateHostedProviderSessionResponse(varCreateHostedProviderSessionResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sessionId")
		delete(additionalProperties, "launchUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateHostedProviderSessionResponse struct {
	value *CreateHostedProviderSessionResponse
	isSet bool
}

func (v NullableCreateHostedProviderSessionResponse) Get() *CreateHostedProviderSessionResponse {
	return v.value
}

func (v *NullableCreateHostedProviderSessionResponse) Set(val *CreateHostedProviderSessionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateHostedProviderSessionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateHostedProviderSessionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateHostedProviderSessionResponse(val *CreateHostedProviderSessionResponse) *NullableCreateHostedProviderSessionResponse {
	return &NullableCreateHostedProviderSessionResponse{value: val, isSet: true}
}

func (v NullableCreateHostedProviderSessionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateHostedProviderSessionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


