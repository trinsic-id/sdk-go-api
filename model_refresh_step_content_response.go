/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshStepContentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshStepContentResponse{}

// RefreshStepContentResponse struct for RefreshStepContentResponse
type RefreshStepContentResponse struct {
	// The integration's next step with refreshed content
	NextStep IntegrationStep `json:"nextStep"`
}

type _RefreshStepContentResponse RefreshStepContentResponse

// NewRefreshStepContentResponse instantiates a new RefreshStepContentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshStepContentResponse(nextStep IntegrationStep) *RefreshStepContentResponse {
	this := RefreshStepContentResponse{}
	this.NextStep = nextStep
	return &this
}

// NewRefreshStepContentResponseWithDefaults instantiates a new RefreshStepContentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshStepContentResponseWithDefaults() *RefreshStepContentResponse {
	this := RefreshStepContentResponse{}
	return &this
}

// GetNextStep returns the NextStep field value
func (o *RefreshStepContentResponse) GetNextStep() IntegrationStep {
	if o == nil {
		var ret IntegrationStep
		return ret
	}

	return o.NextStep
}

// GetNextStepOk returns a tuple with the NextStep field value
// and a boolean to check if the value has been set.
func (o *RefreshStepContentResponse) GetNextStepOk() (*IntegrationStep, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextStep, true
}

// SetNextStep sets field value
func (o *RefreshStepContentResponse) SetNextStep(v IntegrationStep) {
	o.NextStep = v
}

func (o RefreshStepContentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshStepContentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nextStep"] = o.NextStep
	return toSerialize, nil
}

func (o *RefreshStepContentResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nextStep",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshStepContentResponse := _RefreshStepContentResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshStepContentResponse)

	if err != nil {
		return err
	}

	*o = RefreshStepContentResponse(varRefreshStepContentResponse)

	return err
}

type NullableRefreshStepContentResponse struct {
	value *RefreshStepContentResponse
	isSet bool
}

func (v NullableRefreshStepContentResponse) Get() *RefreshStepContentResponse {
	return v.value
}

func (v *NullableRefreshStepContentResponse) Set(val *RefreshStepContentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshStepContentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshStepContentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshStepContentResponse(val *RefreshStepContentResponse) *NullableRefreshStepContentResponse {
	return &NullableRefreshStepContentResponse{value: val, isSet: true}
}

func (v NullableRefreshStepContentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshStepContentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


