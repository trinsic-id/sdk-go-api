/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"time"
)

// checks if the IndonesiaDukcapilMatchInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndonesiaDukcapilMatchInput{}

// IndonesiaDukcapilMatchInput struct for IndonesiaDukcapilMatchInput
type IndonesiaDukcapilMatchInput struct {
	// The user's full name
	FullName NullableString `json:"fullName,omitempty"`
	// The user's date of birth, in `YYYY-MM-DD` format
	DateOfBirth NullableString `json:"dateOfBirth,omitempty"`
	// The user's Indonesia NIK ID number
	NikIdNumber NullableString `json:"nikIdNumber,omitempty"`
	// The email address of the individual.              Either email or phone number must be provided.
	Email NullableString `json:"email,omitempty"`
	// The phone number of the individual.              Either email or phone number must be provided.
	PhoneNumber NullableString `json:"phoneNumber,omitempty"`
	// The raw bytes of the selfie image of the individual.              Must be JPEG or PNG format; 10MB maximum.
	SelfieImage NullableString `json:"selfieImage,omitempty"`
	// The raw bytes of the image of the individual's KTP government ID.              Must be JPEG format; 1MB maximum.              Optional.
	DocumentImage NullableString `json:"documentImage,omitempty"`
	// The timestamp when consent was given by the user for the verification.
	ConsentGivenAt NullableTime `json:"consentGivenAt,omitempty"`
}

// NewIndonesiaDukcapilMatchInput instantiates a new IndonesiaDukcapilMatchInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndonesiaDukcapilMatchInput() *IndonesiaDukcapilMatchInput {
	this := IndonesiaDukcapilMatchInput{}
	return &this
}

// NewIndonesiaDukcapilMatchInputWithDefaults instantiates a new IndonesiaDukcapilMatchInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndonesiaDukcapilMatchInputWithDefaults() *IndonesiaDukcapilMatchInput {
	this := IndonesiaDukcapilMatchInput{}
	return &this
}

// GetFullName returns the FullName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetFullName() string {
	if o == nil || IsNil(o.FullName.Get()) {
		var ret string
		return ret
	}
	return *o.FullName.Get()
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullName.Get(), o.FullName.IsSet()
}

// HasFullName returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasFullName() bool {
	if o != nil && o.FullName.IsSet() {
		return true
	}

	return false
}

// SetFullName gets a reference to the given NullableString and assigns it to the FullName field.
func (o *IndonesiaDukcapilMatchInput) SetFullName(v string) {
	o.FullName.Set(&v)
}
// SetFullNameNil sets the value for FullName to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetFullNameNil() {
	o.FullName.Set(nil)
}

// UnsetFullName ensures that no value is present for FullName, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetFullName() {
	o.FullName.Unset()
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfBirth.Get()
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetDateOfBirthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfBirth.Get(), o.DateOfBirth.IsSet()
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth.IsSet() {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given NullableString and assigns it to the DateOfBirth field.
func (o *IndonesiaDukcapilMatchInput) SetDateOfBirth(v string) {
	o.DateOfBirth.Set(&v)
}
// SetDateOfBirthNil sets the value for DateOfBirth to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetDateOfBirthNil() {
	o.DateOfBirth.Set(nil)
}

// UnsetDateOfBirth ensures that no value is present for DateOfBirth, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetDateOfBirth() {
	o.DateOfBirth.Unset()
}

// GetNikIdNumber returns the NikIdNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetNikIdNumber() string {
	if o == nil || IsNil(o.NikIdNumber.Get()) {
		var ret string
		return ret
	}
	return *o.NikIdNumber.Get()
}

// GetNikIdNumberOk returns a tuple with the NikIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetNikIdNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NikIdNumber.Get(), o.NikIdNumber.IsSet()
}

// HasNikIdNumber returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasNikIdNumber() bool {
	if o != nil && o.NikIdNumber.IsSet() {
		return true
	}

	return false
}

// SetNikIdNumber gets a reference to the given NullableString and assigns it to the NikIdNumber field.
func (o *IndonesiaDukcapilMatchInput) SetNikIdNumber(v string) {
	o.NikIdNumber.Set(&v)
}
// SetNikIdNumberNil sets the value for NikIdNumber to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetNikIdNumberNil() {
	o.NikIdNumber.Set(nil)
}

// UnsetNikIdNumber ensures that no value is present for NikIdNumber, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetNikIdNumber() {
	o.NikIdNumber.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *IndonesiaDukcapilMatchInput) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetEmail() {
	o.Email.Unset()
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber.Get()) {
		var ret string
		return ret
	}
	return *o.PhoneNumber.Get()
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PhoneNumber.Get(), o.PhoneNumber.IsSet()
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber.IsSet() {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given NullableString and assigns it to the PhoneNumber field.
func (o *IndonesiaDukcapilMatchInput) SetPhoneNumber(v string) {
	o.PhoneNumber.Set(&v)
}
// SetPhoneNumberNil sets the value for PhoneNumber to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetPhoneNumberNil() {
	o.PhoneNumber.Set(nil)
}

// UnsetPhoneNumber ensures that no value is present for PhoneNumber, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetPhoneNumber() {
	o.PhoneNumber.Unset()
}

// GetSelfieImage returns the SelfieImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetSelfieImage() string {
	if o == nil || IsNil(o.SelfieImage.Get()) {
		var ret string
		return ret
	}
	return *o.SelfieImage.Get()
}

// GetSelfieImageOk returns a tuple with the SelfieImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetSelfieImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelfieImage.Get(), o.SelfieImage.IsSet()
}

// HasSelfieImage returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasSelfieImage() bool {
	if o != nil && o.SelfieImage.IsSet() {
		return true
	}

	return false
}

// SetSelfieImage gets a reference to the given NullableString and assigns it to the SelfieImage field.
func (o *IndonesiaDukcapilMatchInput) SetSelfieImage(v string) {
	o.SelfieImage.Set(&v)
}
// SetSelfieImageNil sets the value for SelfieImage to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetSelfieImageNil() {
	o.SelfieImage.Set(nil)
}

// UnsetSelfieImage ensures that no value is present for SelfieImage, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetSelfieImage() {
	o.SelfieImage.Unset()
}

// GetDocumentImage returns the DocumentImage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetDocumentImage() string {
	if o == nil || IsNil(o.DocumentImage.Get()) {
		var ret string
		return ret
	}
	return *o.DocumentImage.Get()
}

// GetDocumentImageOk returns a tuple with the DocumentImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetDocumentImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocumentImage.Get(), o.DocumentImage.IsSet()
}

// HasDocumentImage returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasDocumentImage() bool {
	if o != nil && o.DocumentImage.IsSet() {
		return true
	}

	return false
}

// SetDocumentImage gets a reference to the given NullableString and assigns it to the DocumentImage field.
func (o *IndonesiaDukcapilMatchInput) SetDocumentImage(v string) {
	o.DocumentImage.Set(&v)
}
// SetDocumentImageNil sets the value for DocumentImage to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetDocumentImageNil() {
	o.DocumentImage.Set(nil)
}

// UnsetDocumentImage ensures that no value is present for DocumentImage, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetDocumentImage() {
	o.DocumentImage.Unset()
}

// GetConsentGivenAt returns the ConsentGivenAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IndonesiaDukcapilMatchInput) GetConsentGivenAt() time.Time {
	if o == nil || IsNil(o.ConsentGivenAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ConsentGivenAt.Get()
}

// GetConsentGivenAtOk returns a tuple with the ConsentGivenAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IndonesiaDukcapilMatchInput) GetConsentGivenAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConsentGivenAt.Get(), o.ConsentGivenAt.IsSet()
}

// HasConsentGivenAt returns a boolean if a field has been set.
func (o *IndonesiaDukcapilMatchInput) HasConsentGivenAt() bool {
	if o != nil && o.ConsentGivenAt.IsSet() {
		return true
	}

	return false
}

// SetConsentGivenAt gets a reference to the given NullableTime and assigns it to the ConsentGivenAt field.
func (o *IndonesiaDukcapilMatchInput) SetConsentGivenAt(v time.Time) {
	o.ConsentGivenAt.Set(&v)
}
// SetConsentGivenAtNil sets the value for ConsentGivenAt to be an explicit nil
func (o *IndonesiaDukcapilMatchInput) SetConsentGivenAtNil() {
	o.ConsentGivenAt.Set(nil)
}

// UnsetConsentGivenAt ensures that no value is present for ConsentGivenAt, not even an explicit nil
func (o *IndonesiaDukcapilMatchInput) UnsetConsentGivenAt() {
	o.ConsentGivenAt.Unset()
}

func (o IndonesiaDukcapilMatchInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndonesiaDukcapilMatchInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FullName.IsSet() {
		toSerialize["fullName"] = o.FullName.Get()
	}
	if o.DateOfBirth.IsSet() {
		toSerialize["dateOfBirth"] = o.DateOfBirth.Get()
	}
	if o.NikIdNumber.IsSet() {
		toSerialize["nikIdNumber"] = o.NikIdNumber.Get()
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.PhoneNumber.IsSet() {
		toSerialize["phoneNumber"] = o.PhoneNumber.Get()
	}
	if o.SelfieImage.IsSet() {
		toSerialize["selfieImage"] = o.SelfieImage.Get()
	}
	if o.DocumentImage.IsSet() {
		toSerialize["documentImage"] = o.DocumentImage.Get()
	}
	if o.ConsentGivenAt.IsSet() {
		toSerialize["consentGivenAt"] = o.ConsentGivenAt.Get()
	}
	return toSerialize, nil
}

type NullableIndonesiaDukcapilMatchInput struct {
	value *IndonesiaDukcapilMatchInput
	isSet bool
}

func (v NullableIndonesiaDukcapilMatchInput) Get() *IndonesiaDukcapilMatchInput {
	return v.value
}

func (v *NullableIndonesiaDukcapilMatchInput) Set(val *IndonesiaDukcapilMatchInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIndonesiaDukcapilMatchInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIndonesiaDukcapilMatchInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndonesiaDukcapilMatchInput(val *IndonesiaDukcapilMatchInput) *NullableIndonesiaDukcapilMatchInput {
	return &NullableIndonesiaDukcapilMatchInput{value: val, isSet: true}
}

func (v NullableIndonesiaDukcapilMatchInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndonesiaDukcapilMatchInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


