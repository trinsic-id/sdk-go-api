/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSessionResultRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSessionResultRequest{}

// GetSessionResultRequest struct for GetSessionResultRequest
type GetSessionResultRequest struct {
	// The Results Access Key to exchange
	ResultsAccessKey string `json:"resultsAccessKey"`
}

type _GetSessionResultRequest GetSessionResultRequest

// NewGetSessionResultRequest instantiates a new GetSessionResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSessionResultRequest(resultsAccessKey string) *GetSessionResultRequest {
	this := GetSessionResultRequest{}
	this.ResultsAccessKey = resultsAccessKey
	return &this
}

// NewGetSessionResultRequestWithDefaults instantiates a new GetSessionResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSessionResultRequestWithDefaults() *GetSessionResultRequest {
	this := GetSessionResultRequest{}
	return &this
}

// GetResultsAccessKey returns the ResultsAccessKey field value
func (o *GetSessionResultRequest) GetResultsAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResultsAccessKey
}

// GetResultsAccessKeyOk returns a tuple with the ResultsAccessKey field value
// and a boolean to check if the value has been set.
func (o *GetSessionResultRequest) GetResultsAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResultsAccessKey, true
}

// SetResultsAccessKey sets field value
func (o *GetSessionResultRequest) SetResultsAccessKey(v string) {
	o.ResultsAccessKey = v
}

func (o GetSessionResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSessionResultRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resultsAccessKey"] = o.ResultsAccessKey
	return toSerialize, nil
}

func (o *GetSessionResultRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resultsAccessKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSessionResultRequest := _GetSessionResultRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSessionResultRequest)

	if err != nil {
		return err
	}

	*o = GetSessionResultRequest(varGetSessionResultRequest)

	return err
}

type NullableGetSessionResultRequest struct {
	value *GetSessionResultRequest
	isSet bool
}

func (v NullableGetSessionResultRequest) Get() *GetSessionResultRequest {
	return v.value
}

func (v *NullableGetSessionResultRequest) Set(val *GetSessionResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSessionResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSessionResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSessionResultRequest(val *GetSessionResultRequest) *NullableGetSessionResultRequest {
	return &NullableGetSessionResultRequest{value: val, isSet: true}
}

func (v NullableGetSessionResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSessionResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


