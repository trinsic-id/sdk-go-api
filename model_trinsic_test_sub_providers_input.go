/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the TrinsicTestSubProvidersInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrinsicTestSubProvidersInput{}

// TrinsicTestSubProvidersInput struct for TrinsicTestSubProvidersInput
type TrinsicTestSubProvidersInput struct {
	// The ID of the specific IDP to invoke within the test federated provider.              Valid options are `sub-provider-a` and `sub-provider-b`.              If not specified, the user will be prompted to select one.
	SubProviderId NullableString `json:"subProviderId,omitempty"`
}

// NewTrinsicTestSubProvidersInput instantiates a new TrinsicTestSubProvidersInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrinsicTestSubProvidersInput() *TrinsicTestSubProvidersInput {
	this := TrinsicTestSubProvidersInput{}
	return &this
}

// NewTrinsicTestSubProvidersInputWithDefaults instantiates a new TrinsicTestSubProvidersInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrinsicTestSubProvidersInputWithDefaults() *TrinsicTestSubProvidersInput {
	this := TrinsicTestSubProvidersInput{}
	return &this
}

// GetSubProviderId returns the SubProviderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TrinsicTestSubProvidersInput) GetSubProviderId() string {
	if o == nil || IsNil(o.SubProviderId.Get()) {
		var ret string
		return ret
	}
	return *o.SubProviderId.Get()
}

// GetSubProviderIdOk returns a tuple with the SubProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TrinsicTestSubProvidersInput) GetSubProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubProviderId.Get(), o.SubProviderId.IsSet()
}

// HasSubProviderId returns a boolean if a field has been set.
func (o *TrinsicTestSubProvidersInput) HasSubProviderId() bool {
	if o != nil && o.SubProviderId.IsSet() {
		return true
	}

	return false
}

// SetSubProviderId gets a reference to the given NullableString and assigns it to the SubProviderId field.
func (o *TrinsicTestSubProvidersInput) SetSubProviderId(v string) {
	o.SubProviderId.Set(&v)
}
// SetSubProviderIdNil sets the value for SubProviderId to be an explicit nil
func (o *TrinsicTestSubProvidersInput) SetSubProviderIdNil() {
	o.SubProviderId.Set(nil)
}

// UnsetSubProviderId ensures that no value is present for SubProviderId, not even an explicit nil
func (o *TrinsicTestSubProvidersInput) UnsetSubProviderId() {
	o.SubProviderId.Unset()
}

func (o TrinsicTestSubProvidersInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrinsicTestSubProvidersInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SubProviderId.IsSet() {
		toSerialize["subProviderId"] = o.SubProviderId.Get()
	}
	return toSerialize, nil
}

type NullableTrinsicTestSubProvidersInput struct {
	value *TrinsicTestSubProvidersInput
	isSet bool
}

func (v NullableTrinsicTestSubProvidersInput) Get() *TrinsicTestSubProvidersInput {
	return v.value
}

func (v *NullableTrinsicTestSubProvidersInput) Set(val *TrinsicTestSubProvidersInput) {
	v.value = val
	v.isSet = true
}

func (v NullableTrinsicTestSubProvidersInput) IsSet() bool {
	return v.isSet
}

func (v *NullableTrinsicTestSubProvidersInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrinsicTestSubProvidersInput(val *TrinsicTestSubProvidersInput) *NullableTrinsicTestSubProvidersInput {
	return &NullableTrinsicTestSubProvidersInput{value: val, isSet: true}
}

func (v NullableTrinsicTestSubProvidersInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrinsicTestSubProvidersInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


