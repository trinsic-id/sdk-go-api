/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the DocumentScanAttachments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DocumentScanAttachments{}

// DocumentScanAttachments struct for DocumentScanAttachments
type DocumentScanAttachments struct {
	Report NullableString `json:"report,omitempty"`
}

// NewDocumentScanAttachments instantiates a new DocumentScanAttachments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentScanAttachments() *DocumentScanAttachments {
	this := DocumentScanAttachments{}
	return &this
}

// NewDocumentScanAttachmentsWithDefaults instantiates a new DocumentScanAttachments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentScanAttachmentsWithDefaults() *DocumentScanAttachments {
	this := DocumentScanAttachments{}
	return &this
}

// GetReport returns the Report field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DocumentScanAttachments) GetReport() string {
	if o == nil || IsNil(o.Report.Get()) {
		var ret string
		return ret
	}
	return *o.Report.Get()
}

// GetReportOk returns a tuple with the Report field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DocumentScanAttachments) GetReportOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Report.Get(), o.Report.IsSet()
}

// HasReport returns a boolean if a field has been set.
func (o *DocumentScanAttachments) HasReport() bool {
	if o != nil && o.Report.IsSet() {
		return true
	}

	return false
}

// SetReport gets a reference to the given NullableString and assigns it to the Report field.
func (o *DocumentScanAttachments) SetReport(v string) {
	o.Report.Set(&v)
}
// SetReportNil sets the value for Report to be an explicit nil
func (o *DocumentScanAttachments) SetReportNil() {
	o.Report.Set(nil)
}

// UnsetReport ensures that no value is present for Report, not even an explicit nil
func (o *DocumentScanAttachments) UnsetReport() {
	o.Report.Unset()
}

func (o DocumentScanAttachments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DocumentScanAttachments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Report.IsSet() {
		toSerialize["report"] = o.Report.Get()
	}
	return toSerialize, nil
}

type NullableDocumentScanAttachments struct {
	value *DocumentScanAttachments
	isSet bool
}

func (v NullableDocumentScanAttachments) Get() *DocumentScanAttachments {
	return v.value
}

func (v *NullableDocumentScanAttachments) Set(val *DocumentScanAttachments) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentScanAttachments) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentScanAttachments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentScanAttachments(val *DocumentScanAttachments) *NullableDocumentScanAttachments {
	return &NullableDocumentScanAttachments{value: val, isSet: true}
}

func (v NullableDocumentScanAttachments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentScanAttachments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


