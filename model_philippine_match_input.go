/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
)

// checks if the PhilippineMatchInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PhilippineMatchInput{}

// PhilippineMatchInput struct for PhilippineMatchInput
type PhilippineMatchInput struct {
	// The user's given / first name
	GivenName NullableString `json:"givenName,omitempty"`
	// The user's middle name
	MiddleName NullableString `json:"middleName,omitempty"`
	// The user's family / last name
	FamilyName NullableString `json:"familyName,omitempty"`
	// The user's name suffix
	Suffix NullableString `json:"suffix,omitempty"`
	// The user's date of birth, in `YYYY-MM-DD` format
	DateOfBirth NullableString `json:"dateOfBirth,omitempty"`
}

// NewPhilippineMatchInput instantiates a new PhilippineMatchInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPhilippineMatchInput() *PhilippineMatchInput {
	this := PhilippineMatchInput{}
	return &this
}

// NewPhilippineMatchInputWithDefaults instantiates a new PhilippineMatchInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPhilippineMatchInputWithDefaults() *PhilippineMatchInput {
	this := PhilippineMatchInput{}
	return &this
}

// GetGivenName returns the GivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhilippineMatchInput) GetGivenName() string {
	if o == nil || IsNil(o.GivenName.Get()) {
		var ret string
		return ret
	}
	return *o.GivenName.Get()
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhilippineMatchInput) GetGivenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GivenName.Get(), o.GivenName.IsSet()
}

// HasGivenName returns a boolean if a field has been set.
func (o *PhilippineMatchInput) HasGivenName() bool {
	if o != nil && o.GivenName.IsSet() {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given NullableString and assigns it to the GivenName field.
func (o *PhilippineMatchInput) SetGivenName(v string) {
	o.GivenName.Set(&v)
}
// SetGivenNameNil sets the value for GivenName to be an explicit nil
func (o *PhilippineMatchInput) SetGivenNameNil() {
	o.GivenName.Set(nil)
}

// UnsetGivenName ensures that no value is present for GivenName, not even an explicit nil
func (o *PhilippineMatchInput) UnsetGivenName() {
	o.GivenName.Unset()
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhilippineMatchInput) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName.Get()) {
		var ret string
		return ret
	}
	return *o.MiddleName.Get()
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhilippineMatchInput) GetMiddleNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MiddleName.Get(), o.MiddleName.IsSet()
}

// HasMiddleName returns a boolean if a field has been set.
func (o *PhilippineMatchInput) HasMiddleName() bool {
	if o != nil && o.MiddleName.IsSet() {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given NullableString and assigns it to the MiddleName field.
func (o *PhilippineMatchInput) SetMiddleName(v string) {
	o.MiddleName.Set(&v)
}
// SetMiddleNameNil sets the value for MiddleName to be an explicit nil
func (o *PhilippineMatchInput) SetMiddleNameNil() {
	o.MiddleName.Set(nil)
}

// UnsetMiddleName ensures that no value is present for MiddleName, not even an explicit nil
func (o *PhilippineMatchInput) UnsetMiddleName() {
	o.MiddleName.Unset()
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhilippineMatchInput) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName.Get()) {
		var ret string
		return ret
	}
	return *o.FamilyName.Get()
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhilippineMatchInput) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FamilyName.Get(), o.FamilyName.IsSet()
}

// HasFamilyName returns a boolean if a field has been set.
func (o *PhilippineMatchInput) HasFamilyName() bool {
	if o != nil && o.FamilyName.IsSet() {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given NullableString and assigns it to the FamilyName field.
func (o *PhilippineMatchInput) SetFamilyName(v string) {
	o.FamilyName.Set(&v)
}
// SetFamilyNameNil sets the value for FamilyName to be an explicit nil
func (o *PhilippineMatchInput) SetFamilyNameNil() {
	o.FamilyName.Set(nil)
}

// UnsetFamilyName ensures that no value is present for FamilyName, not even an explicit nil
func (o *PhilippineMatchInput) UnsetFamilyName() {
	o.FamilyName.Unset()
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhilippineMatchInput) GetSuffix() string {
	if o == nil || IsNil(o.Suffix.Get()) {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhilippineMatchInput) GetSuffixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *PhilippineMatchInput) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *PhilippineMatchInput) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *PhilippineMatchInput) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *PhilippineMatchInput) UnsetSuffix() {
	o.Suffix.Unset()
}

// GetDateOfBirth returns the DateOfBirth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PhilippineMatchInput) GetDateOfBirth() string {
	if o == nil || IsNil(o.DateOfBirth.Get()) {
		var ret string
		return ret
	}
	return *o.DateOfBirth.Get()
}

// GetDateOfBirthOk returns a tuple with the DateOfBirth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PhilippineMatchInput) GetDateOfBirthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateOfBirth.Get(), o.DateOfBirth.IsSet()
}

// HasDateOfBirth returns a boolean if a field has been set.
func (o *PhilippineMatchInput) HasDateOfBirth() bool {
	if o != nil && o.DateOfBirth.IsSet() {
		return true
	}

	return false
}

// SetDateOfBirth gets a reference to the given NullableString and assigns it to the DateOfBirth field.
func (o *PhilippineMatchInput) SetDateOfBirth(v string) {
	o.DateOfBirth.Set(&v)
}
// SetDateOfBirthNil sets the value for DateOfBirth to be an explicit nil
func (o *PhilippineMatchInput) SetDateOfBirthNil() {
	o.DateOfBirth.Set(nil)
}

// UnsetDateOfBirth ensures that no value is present for DateOfBirth, not even an explicit nil
func (o *PhilippineMatchInput) UnsetDateOfBirth() {
	o.DateOfBirth.Unset()
}

func (o PhilippineMatchInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PhilippineMatchInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.GivenName.IsSet() {
		toSerialize["givenName"] = o.GivenName.Get()
	}
	if o.MiddleName.IsSet() {
		toSerialize["middleName"] = o.MiddleName.Get()
	}
	if o.FamilyName.IsSet() {
		toSerialize["familyName"] = o.FamilyName.Get()
	}
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	if o.DateOfBirth.IsSet() {
		toSerialize["dateOfBirth"] = o.DateOfBirth.Get()
	}
	return toSerialize, nil
}

type NullablePhilippineMatchInput struct {
	value *PhilippineMatchInput
	isSet bool
}

func (v NullablePhilippineMatchInput) Get() *PhilippineMatchInput {
	return v.value
}

func (v *NullablePhilippineMatchInput) Set(val *PhilippineMatchInput) {
	v.value = val
	v.isSet = true
}

func (v NullablePhilippineMatchInput) IsSet() bool {
	return v.isSet
}

func (v *NullablePhilippineMatchInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePhilippineMatchInput(val *PhilippineMatchInput) *NullablePhilippineMatchInput {
	return &NullablePhilippineMatchInput{value: val, isSet: true}
}

func (v NullablePhilippineMatchInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePhilippineMatchInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


