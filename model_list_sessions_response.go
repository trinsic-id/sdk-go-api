/*
Trinsic API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package trinsic_api

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListSessionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSessionsResponse{}

// ListSessionsResponse struct for ListSessionsResponse
type ListSessionsResponse struct {
	Sessions []Session `json:"sessions"`
	// The total number of sessions tied to your account
	Total int32 `json:"total"`
	// Whether there are additional pages of sessions to retrieve
	More bool `json:"more"`
}

type _ListSessionsResponse ListSessionsResponse

// NewListSessionsResponse instantiates a new ListSessionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSessionsResponse(sessions []Session, total int32, more bool) *ListSessionsResponse {
	this := ListSessionsResponse{}
	this.Sessions = sessions
	this.Total = total
	this.More = more
	return &this
}

// NewListSessionsResponseWithDefaults instantiates a new ListSessionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSessionsResponseWithDefaults() *ListSessionsResponse {
	this := ListSessionsResponse{}
	return &this
}

// GetSessions returns the Sessions field value
func (o *ListSessionsResponse) GetSessions() []Session {
	if o == nil {
		var ret []Session
		return ret
	}

	return o.Sessions
}

// GetSessionsOk returns a tuple with the Sessions field value
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetSessionsOk() ([]Session, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sessions, true
}

// SetSessions sets field value
func (o *ListSessionsResponse) SetSessions(v []Session) {
	o.Sessions = v
}

// GetTotal returns the Total field value
func (o *ListSessionsResponse) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ListSessionsResponse) SetTotal(v int32) {
	o.Total = v
}

// GetMore returns the More field value
func (o *ListSessionsResponse) GetMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.More
}

// GetMoreOk returns a tuple with the More field value
// and a boolean to check if the value has been set.
func (o *ListSessionsResponse) GetMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.More, true
}

// SetMore sets field value
func (o *ListSessionsResponse) SetMore(v bool) {
	o.More = v
}

func (o ListSessionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSessionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sessions"] = o.Sessions
	toSerialize["total"] = o.Total
	toSerialize["more"] = o.More
	return toSerialize, nil
}

func (o *ListSessionsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sessions",
		"total",
		"more",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListSessionsResponse := _ListSessionsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListSessionsResponse)

	if err != nil {
		return err
	}

	*o = ListSessionsResponse(varListSessionsResponse)

	return err
}

type NullableListSessionsResponse struct {
	value *ListSessionsResponse
	isSet bool
}

func (v NullableListSessionsResponse) Get() *ListSessionsResponse {
	return v.value
}

func (v *NullableListSessionsResponse) Set(val *ListSessionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSessionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSessionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSessionsResponse(val *ListSessionsResponse) *NullableListSessionsResponse {
	return &NullableListSessionsResponse{value: val, isSet: true}
}

func (v NullableListSessionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSessionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


